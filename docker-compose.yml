version: "3.3"
services:
  postgres:
    image: postgres:14.1
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
    expose:
      - "5432"
    networks:
      - network
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data

  client:
    build:
      context: ./web-app/
      dockerfile: Dockerfile-client
    ports:
      - "3000:3000"
    environment:
      HOST: "0.0.0.0"
      REACT_APP_SERVER_HOST: ${HOST_SERVER_IP}
      REACT_APP_SERVER_PORT: 5000
    depends_on:
      - "postgres"
      - "server"
    networks:
      - network
    restart: always

  server:
    build:
      context: ./web-app/
      dockerfile: Dockerfile-server
    environment:
      DB_NAME: "${POSTGRES_DB}"
      DB_USER: "${POSTGRES_USER}"
      DB_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_TASKS_TABLE_NAME: tasks
      DB_HOST: postgres
      DB_PORT: 5432
      NODE_ENV: 'development'
      SERVER_PORT: 5000
      SERVER_HOST: 0.0.0.0
      KAFKA_HOST: kafka
      KAFKA_SERVER_PORT: 9092
      KAFKA_ADMIN_CLIENT_ID: "${KAFKA_ADMIN_CLIENT_ID}"
      KAFKA_TOPIC_NAME: tasks
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - kafka
    volumes:
      - uploads:/server/uploads/
      - datasets:/server/build/target/inputData/
    networks:
      - network
    restart: always
    # logging:
    #   driver: none
  
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    expose:
      - "2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    logging:
      driver: none
    networks:
      - network
    restart: always
    volumes:
       - ./volumes/logs/zk/:/var/lib/zookeeper/log
       - ./volumes/data/zk/:/var/lib/zookeeper/data

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    expose:
      - '9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_LISTENERS: 'PLAINTEXT://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    logging:
      driver: none
    networks:
      - network
    restart: always
    volumes:
      - ./volumes/logs/kafka/:/var/log/kafka
      - ./volumes/data/kafka/:/var/lib/kafka/data

  python-consumer:
    build:
      context: ./python-consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - uploads:/server/uploads/
    networks:
      - network
    environment:
      TIMELIMIT: ${CONSUMER_TL_SEC}
      MAX_RAM: ${CONSUMER_ML_MB}
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      MAX_ACTIVE_TASKS: 4
      DOCKER_NETWORK: desbordante_network
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DBNAME: "${POSTGRES_DB}"
      DB_TASKS_TABLE_NAME: tasks
    restart: always

networks:
  network:
volumes:
  uploads:
    driver: local
    driver_opts:
      type: 'volume'
      o: 'bind'
      device: './volumes/uploads/'
  postgres-data:
    driver: local
    driver_opts:
      type: 'volume'
      o: 'bind'
      device: './volumes/postgres-data/'   
  datasets:
    driver: local
    driver_opts:
      type: 'volume'
      o: 'bind'
      device: './volumes/datasets/'
